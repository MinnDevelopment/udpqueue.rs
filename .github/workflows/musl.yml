name: musl

on:
  push:
    branches: [ "feature/musl-linux" ]

concurrency:
  group: "pub"
  cancel-in-progress: true

jobs:
  linux:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            deps: |
              apk add musl openjdk8
              mkdir -p /root/musl
              curl -q https://musl.cc/x86_64-linux-musl-cross.tgz | tar xzf - -C /root/musl
              ln -s /root/musl/x86_64-linux-musl-cross/bin/x86_64-linux-musl-gcc /usr/bin/gcc-musl
          - target: aarch64-unknown-linux-musl
            deps: |
              apk add musl openjdk8
              mkdir -p /root/musl
              curl -q https://musl.cc/aarch64-linux-musl-cross.tgz | tar xzf - -C /root/musl
              ln -s /root/musl/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc /usr/bin/gcc-musl
          # - target: i686-unknown-linux-musl
          #   deps: apk add gcc-multilib musl
          # - target: armv7-unknown-linux-musleabihf
          #   deps: apt-get gcc-arm-linux-gnueabihf musl

    name: Musl build ${{ matrix.target }}
    environment: MavenRelease
    runs-on: ubuntu-20.04
    container:
      image: alpine:3.18
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install Essentials
        run: |
          apk add curl gcc
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Install linker dependencies
        run: ${{ matrix.deps }}
        if: ${{ matrix.deps != '' }}
      - name: Compile natives
        working-directory: native
        run: cargo build -r --target=${{ matrix.target }}
      - name: Printing Information
        run: ldd ./native/target/${{ matrix.target }}/release/libudpqueue.so
      - name: Publish
        env:
          ORG_GRADLE_PROJECT_ossrhUser: ${{ secrets.OSSRH_USER }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_stagingProfile: ${{ secrets.STAGING_PROFILE_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEYID }}
        run: |
          chmod u+x gradlew
          ./gradlew --console plain --stacktrace -Ptarget="${{ matrix.target }}" native:publishToSonatype closeAndReleaseStagingRepository
